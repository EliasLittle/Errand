{ foreign fn printf(a::Int) -> Int { {  } }; foreign fn malloc(a::Int) -> Int { {  } }; foreign fn free(a::Int) -> Int { {  } }; foreign fn strlen(a::Int) -> Int { {  } }; foreign fn strcpy(a::Int, b::Int) -> Int { {  } }; foreign fn strcmp(a::Int, b::Int) -> Int32 { {  } }; fn strlen(a::String) { { return strlen(as_ptr(a::Any)) } }; fn strcpy(a::String, b::String) { { return strcpy(as_ptr(a::Any), as_ptr(b::Any)) } }; fn free(a::String) { { return free(as_ptr(a::Any)) } }; (s::Any Assignment "World"::String); printf("Hello %s"::String, s::Any); (a::Any Assignment as_ptr(s::Any)); printf("Address %p"::String, a::Any) }